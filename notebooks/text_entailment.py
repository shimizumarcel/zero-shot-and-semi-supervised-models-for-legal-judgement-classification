# -*- coding: utf-8 -*-
"""text_entailment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lOfbKQDTPfNGSL7MbUnj3l5hRkFQM-9v
"""

!pip install datasets

from google.colab import drive
import pandas as pd
from transformers import pipeline
from datasets import Dataset
from sklearn.metrics import accuracy_score, classification_report

drive.mount('/content/drive')

test = pd.read_csv("/content/drive/My Drive/tcc/data/test.csv")

X_test = test["text"]
y_test = test["label"]

labels = ["esse acórdão foi favorável ao recorrente",
    "o pedido foi julgado procedente",
    "esse acórdão foi desfavorável ao recorrente",
    "o pedido foi julgado improcedente"]

pipe = pipeline("zero-shot-classification", model="joeddav/xlm-roberta-large-xnli", device = 0)

label_mapping = {
     "esse acórdão foi favorável ao recorrente": 0,
    "o pedido foi julgado procedente": 0,
    "esse acórdão foi desfavorável ao recorrente": 1,
    "o pedido foi julgado improcedente": 1
}

test_dataset = Dataset.from_dict({"text": X_test.tolist()})

def zero_shot_entailment_parallel(batch):
    result = pipe(batch["text"], labels, multi_label=False)
    predicted_label = result["labels"][0]
    return {"final_label": label_mapping[predicted_label]}

classified_dataset = test_dataset.map(zero_shot_entailment_parallel, batched=False)

y_pred_entailment = classified_dataset["final_label"]

accuracy_entailment = accuracy_score(y_test, y_pred_entailment)
print(f"Acurácia Zero-Shot: {accuracy_entailment}")

report_entailment = classification_report(y_test, y_pred_entailment)
print("Relatório de Classificação Zero-Shot:\n", report_entailment)