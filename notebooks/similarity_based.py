# -*- coding: utf-8 -*-
"""similarity-based.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12gbQTUiD4fqIsyiiLT2Xz1_Zhwlpdneg
"""

!pip install lbl2vec
!pip install datasets

from google.colab import drive
from datasets import Dataset
from lbl2vec import Lbl2TransformerVec
from sentence_transformers import SentenceTransformer
import torch
import pandas as pd
from sklearn.metrics import accuracy_score, classification_report

drive.mount('/content/drive')

test = pd.read_csv("/content/drive/My Drive/tcc/data/test.csv")

X_test = test["text"]
y_test = test["label"]
train = X_test.to_list()
test = y_test.to_list()

descriptive_keywords = [["favorável"],
                        ["desfavorável"]]

"""descriptive_keywords = [["deu provimento", "deu parcial provimento", "concedeu a ordem", "concedeu parcialmente a ordem"],
                        ["indeferimento do pedido", "negou provimento", "denegou a ordem", "negou provimento", "não conhecido"]]"""

transformer_model = SentenceTransformer("neuralmind/bert-base-portuguese-cased")

model = Lbl2TransformerVec(
    transformer_model=transformer_model,
    keywords_list= descriptive_keywords,
    documents= train,
    device=torch.device("cuda")
)

model.fit()

y_pred = model.predict_model_docs()

y_pred

y_pred["most_similar_label"] = y_pred["most_similar_label"].replace({"label_0": 0, "label_1": 1})
y_pred = y_pred["most_similar_label"].tolist()

# Calculando métricas
accuracy = accuracy_score(test, y_pred)
print(f"Acurácia Zero-Shot: {accuracy}")

report= classification_report(test, y_pred)
print("Relatório de Classificação Zero-shot similarity-basedt:\n", report)

transformer_model2 = SentenceTransformer("rufimelo/Legal-BERTimbau-sts-base-ma-v2")

model2 = Lbl2TransformerVec(
    transformer_model=transformer_model2,
    keywords_list= descriptive_keywords,
    documents= train,
    device=torch.device("cuda")
)

model2.fit()

y_pred2 = model2.predict_model_docs()

y_pred2["most_similar_label"] = y_pred2["most_similar_label"].replace({"label_0": 0, "label_1": 1})
y_pred2 = y_pred2["most_similar_label"].tolist()

# Calculando métricas
accuracy = accuracy_score(test, y_pred2)
print(f"Acurácia Zero-Shot: {accuracy}")

report= classification_report(test, y_pred2)
print("Relatório de Classificação Zero-shot similarity-basedt:\n", report)

