# -*- coding: utf-8 -*-
"""TCC_naive_bayes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DRdE1DVJHg7Tvrpz1Kt2Ok8a-1fk5pKy

##Libraries
"""

from google.colab import drive
import pandas as pd
from sklearn.model_selection import train_test_split
from imblearn.pipeline import Pipeline as ImbPipeline
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report
import numpy as np

import nltk
from nltk.stem import WordNetLemmatizer
from sklearn.base import BaseEstimator, TransformerMixin

nltk.download('wordnet')
nltk.download('omw-1.4')

"""##Importing Data"""

drive.mount('/content/drive')

train = pd.read_csv("/content/drive/My Drive/tcc/data/train.csv")
test = pd.read_csv("/content/drive/My Drive/tcc/data/test.csv")

X_train = train["text"]
X_test = test["text"]
y_train = train["label"]
y_test = test["label"]

"""## Building a supervised Naive Bayesline"""

pipeline_nb = ImbPipeline([
    ("vectorizer", CountVectorizer()),
    ("classifier", MultinomialNB())
])

pipeline_nb.fit(X_train, y_train)

print(type(y_train))

y_pred_nb = pipeline_nb.predict(X_test)
print("Acurácia balanceada: ", accuracy_score(y_test, y_pred_nb))
print("\nRelatório de Classificação:")
print(classification_report(y_test, y_pred_nb))

